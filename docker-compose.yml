version: '3.8'
services:
  app:
    container_name: edgecom-app
    networks:
      - edgecom-network
    build: .
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=edgecom
      - DB_USER=edgecom
      - DB_PASSWORD=edgecom
    volumes:
      - ./config.yaml:/app/config.yaml

  db:
    container_name: edgecom-db
    networks:
      - edgecom-network
    image: timescale/timescaledb:latest-pg14
    environment:
      - POSTGRES_DB=edgecom
      - POSTGRES_USER=edgecom
      - POSTGRES_PASSWORD=edgecom
    ports:
      - "5432:5432"
    volumes:
      - ./migrations:/docker-entrypoint-initdb.d
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U edgecom"]
      interval: 5s
      timeout: 5s
      retries: 5

  test:
    container_name: edgecom-test
    networks:
      - edgecom-network
    build:
      context: .
      dockerfile: Dockerfile
      target: builder
    command: >
      sh -c "
        echo 'Running unit tests...' &&
        go test ./... &&
        echo 'Waiting for database...' &&
        until nc -z db 5432; do
          sleep 1
        done &&
        echo 'Database is ready!' &&
        echo 'Running integration tests...' &&
        go test -v -tags=integration ./integration-tests/...
      "
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=edgecom
      - DB_USER=edgecom
      - DB_PASSWORD=edgecom
    volumes:
      - .:/app
    profiles:
      - test

volumes:
  postgres_data: 

networks:
  edgecom-network:
    driver: bridge 